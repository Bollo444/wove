services:
  # Backend API service
  api:
    build:
      context: ./backend/wove-api
      dockerfile: Dockerfile.dev
    container_name: wove-api
    ports:
      - "3001:3001"
    volumes:
      - ./backend/wove-api:/app
      - /app/node_modules
      - ./shared:/app/shared
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=development
      - PORT=3001
    depends_on:
      - postgres
      - redis
    networks:
      - wove-network
    restart: unless-stopped

  # Frontend web application
  web:
    build:
      context: ./frontend/wove-web
      dockerfile: Dockerfile.dev
    container_name: wove-web
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/wove-web:/app
      - /app/node_modules
      - ./shared:/app/shared
    env_file:
      - .env.docker
    environment:
      - NODE_ENV=development
    depends_on:
      - api
    networks:
      - wove-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: wove-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wove
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - wove-network

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    container_name: wove-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - wove-network

volumes:
  postgres-data:
  redis-data:

networks:
  wove-network:
    driver: bridge