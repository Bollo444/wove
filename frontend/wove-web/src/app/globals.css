@tailwind base;
@tailwind components;
@tailwind utilities;

/* Theme variables are now generated by generateCSSVariables in themes.ts 
   and applied by ThemeProvider in ThemeContext.tsx to the :root element.
   Tailwind dark mode is handled by the 'dark' class on the html element via DarkModeProvider.
*/

body {
  color: var(--color-text-primary);
  background-color: var(--color-background);
  /* Ensure smooth transitions for color changes */
  transition-property: color, background-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

/* Ensure inputs and textareas also inherit colors correctly and have appropriate focus styles */
input,
textarea,
select,
button {
  color: var(--color-text-primary);
  background-color: var(--color-surface);
  border-color: var(--color-border);
  /* Add a default border style if not already present */
  border-width: 1px;
  border-style: solid;
  padding: 0.5rem 0.75rem; /* Sensible default padding */
  border-radius: var(--border-radius-md); /* Use theme border radius */
}

input:focus,
textarea:focus,
select:focus {
  outline: 2px solid transparent; /* Remove default browser outline */
  outline-offset: 2px;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px var(--color-primary); /* Tailwind-like focus ring */
}

/* Placeholder text color */
input::placeholder,
textarea::placeholder {
  color: var(--color-text-secondary); /* Or a more muted placeholder color */
  opacity: 0.7; /* Adjust opacity as needed */
}


@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
